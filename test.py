import streamlit as st
import pandas as pd

"""
# --- Title ---
st.title("Traffic Monitoring Dashboard (Placeholder)")

# --- Simulated Placeholder Data ---
data = {
    "NodeID": ["Node_1", "Node_2", "Node_3", "Node_1", "Node_2", "Node_3"],
    "VehicleCount": [12, 34, 27, 45, 22, 18],
    "AvgSpeed": [40.5, 33.2, 50.1, 44.0, 28.9, 60.2],
    "ParkingStatus": ["Available", "Full", "Full", "Available", "Available", "Full"],
    "CongestionLevel": ["Low", "High", "Medium", "High", "Medium", "Low"]
}

df = pd.DataFrame(data)

# --- Raw Data Display ---
st.subheader("Raw Traffic Data")
st.dataframe(df)

# --- Summary Stats ---
st.subheader("Summary Statistics")
st.write(df.describe())

# --- Numeric Column Chart ---
st.subheader("Visualize Numeric Column")
numeric_cols = df.select_dtypes(include=['number']).columns.tolist()
selected_num_col = st.selectbox("Select numeric column", numeric_cols)
st.line_chart(df[selected_num_col])

# --- Categorical Column Chart ---
st.subheader("Categorical Distribution")
categorical_cols = df.select_dtypes(include=['object']).columns.tolist()
selected_cat_col = st.selectbox("Select categorical column", categorical_cols)
st.bar_chart(df[selected_cat_col].value_counts())

# --- Footer ---
st.caption("This dashboard uses placeholder data for demonstration purposes.")
"""

"""
import streamlit as st
import pandas as pd

# --- Title ---
st.title("Traffic Monitoring Dashboard")

# --- Load CSV File ---
csv_file = "dummy data.csv"  # Make sure the file is in the same directory as this script

try:
    df = pd.read_csv(csv_file)

    # --- Raw Data Display ---
    st.subheader("Raw Traffic Data")
    st.dataframe(df)

    # --- Summary Stats ---
    st.subheader("Summary Statistics")
    st.write(df.describe())

    # --- Numeric Column Chart ---
    st.subheader("Visualize Numeric Column")
    numeric_cols = df.select_dtypes(include=['number']).columns.tolist()
    if numeric_cols:
        selected_num_col = st.selectbox("Select numeric column", numeric_cols)
        st.line_chart(df[selected_num_col])
    else:
        st.warning("No numeric columns found in CSV.")

    # --- Categorical Column Chart ---
    st.subheader("Categorical Distribution")
    categorical_cols = df.select_dtypes(include=['object']).columns.tolist()
    if categorical_cols:
        selected_cat_col = st.selectbox("Select categorical column", categorical_cols)
        st.bar_chart(df[selected_cat_col].value_counts())
    else:
        st.warning("No categorical columns found in CSV.")

except FileNotFoundError:
    st.error(f"CSV file '{csv_file}' not found. Please place it in the project folder.")
except Exception as e:
    st.error(f"Error loading CSV: {e}")

# --- Footer ---
st.caption("Data loaded from log.csv generated by the ESP32 base station.")
"""

"""
import streamlit as st
import pandas as pd

# --- Title ---
st.title("Traffic Monitoring Dashboard")

# --- Load CSV File ---
csv_file = "dummy data.csv"  # Adjust to your actual CSV filename

try:
    # Read CSV file with expected columns
    df = pd.read_csv(csv_file)

    # Check if expected columns exist
    expected_cols = ["NodeID", "VehicleCount", "AvgSpeed", "ParkingStatus", "CongestionLevel"]
    if not all(col in df.columns for col in expected_cols):
        st.error(f"CSV file is missing one or more expected columns: {expected_cols}")
    else:
        # --- Raw Data Display ---
        st.subheader("Raw Traffic Data")
        st.dataframe(df)

        # --- Summary Statistics (numeric columns only) ---
        st.subheader("Summary Statistics")
        st.write(df.describe())

        # --- Numeric Column Chart ---
        st.subheader("Visualize Numeric Column")
        numeric_cols = df.select_dtypes(include=['number']).columns.tolist()
        if numeric_cols:
            selected_num_col = st.selectbox("Select numeric column", numeric_cols)
            st.line_chart(df[selected_num_col])
        else:
            st.warning("No numeric columns found in CSV.")

        # --- Categorical Column Chart ---
        st.subheader("Categorical Distribution")
        categorical_cols = df.select_dtypes(include=['object']).columns.tolist()
        if categorical_cols:
            selected_cat_col = st.selectbox("Select categorical column", categorical_cols)
            st.bar_chart(df[selected_cat_col].value_counts())
        else:
            st.warning("No categorical columns found in CSV.")

except FileNotFoundError:
    st.error(f"CSV file '{csv_file}' not found. Please place it in the project folder.")
except Exception as e:
    st.error(f"Error loading CSV: {e}")

# --- Footer ---
st.caption("Data loaded from log.csv generated by the ESP32 base station.")

"""